# Build info
- build:       db_migration
  default:     all
  description: Project for db_migration
  extends:
  - ":python:python.yml"
  default:
  - py_clean
  - py_check
  - py_test
  alias:
    release:
    - rel_checks
    - py_check
    - py_test
    - tag

# Build properties
- properties:
    name:          "db_migration"
    version:       "0.6.4"
    py_chk_cfg:    "pylint.cfg"
    # clean stuff
    py_clean_dirs: :py_build_dir
    py_clean_files:
    - "**/*.pyc"
    - "**/*~"
    - "**/#*#"

# Build targets
- target:      tag
  description: SVN tag release
  script:
  - print: "Tagging project..."
  - 'git tag "#{tag_prefix}-#{version}" && git push --tag'

- target:      rel_check_changes
  description: Check that there are no uncommitted changes
  script:
  - print: "Checking that there are no uncommitted changes..."
  - if: "`git diff`.length > 0"
    then:
    - throw: "There are uncommitted changes"
    else:
    - print: "OK"

- target:      rel_check_versions
  description: Check that there are no version conflict
  script:
  - print: "Check that versions are coherent..."
  - yaml_load:
      file: :changelog
      prop: 'changelog_version'
  - if: "version != changelog_version[0]['release']"
    then:
    - throw: "Les versions dans le build file et le changelog sont différentes" 
    else:
    - print: "OK"

- target:      rel_check_date
  description: Check that release date is today
  script:
  - print: "Checking release date..."
  - yaml_load:
      file: :changelog
      prop: 'changelog_version'
  - if: "Date.today != changelog_version[0]['date']"
    then: 
    - throw: "La date du changelog est différente de la date d'aujourd'hui"
    else:
    - print: "OK"

- target:      rel_checks
  depends:     [rel_check_changes, rel_check_versions, rel_check_date]
  description: Perform all check before a release
